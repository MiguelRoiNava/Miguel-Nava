{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNTm0o+ZLioJePZUBtJsLSl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MiguelRoiNava/Miguel-Nava/blob/main/practical%20exam\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d3sfF5gkZqPZ"
      },
      "source": [
        "1.a (WY)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k3b01DiHYytv",
        "outputId": "6e35ad2d-47b4-4682-a9dc-d8db9ea8beae"
      },
      "source": [
        "import numpy as np\n",
        "W = np.array ([[1,-3],[2,-2],[3,1]])\n",
        "Y = np.array ([[1,2,0],[0,-1,2]])\n",
        "\n",
        "print(\"Vector W is\",W)\n",
        "print()\n",
        "print(\"Vector Y is\",Y)\n",
        "print()\n",
        "print(\"WY\")\n",
        "dot = np.dot(W,Y)\n",
        "print(dot)\n",
        "print()"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vector W is [[ 1 -3]\n",
            " [ 2 -2]\n",
            " [ 3  1]]\n",
            "\n",
            "Vector Y is [[ 1  2  0]\n",
            " [ 0 -1  2]]\n",
            "\n",
            "WY\n",
            "[[ 1  5 -6]\n",
            " [ 2  6 -4]\n",
            " [ 3  5  2]]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "k8Jiku8PZwgV"
      },
      "source": [
        "1.b (Z+Z)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r4sJcYu4ZH7q",
        "outputId": "4934739c-cdd0-43df-ae5e-91e112ed277c"
      },
      "source": [
        "import numpy as np\n",
        "Z = np.array ([[0,1],[2,3]])\n",
        "\n",
        "print(\"Vector Z is\", Z)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vector Z is [[0 1]\n",
            " [2 3]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TDZ7CCsBZ3Rp"
      },
      "source": [
        "1.c (3X)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mFT8uSLRZW9P",
        "outputId": "97f58016-9fe3-4dd8-bd1e-e3198960191b"
      },
      "source": [
        "R = np.add(Z,Z)\n",
        "R"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0, 2],\n",
              "       [4, 6]])"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jcb70Cm1aLEs"
      },
      "source": [
        "2.a (YW)^2"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BfrwOgFlaJox",
        "outputId": "50cbb5a5-eed7-4e7a-bca8-47996d69b1ac"
      },
      "source": [
        "import numpy as np\n",
        "Y = np.array ([[1,2,0],[0,-1,2]])\n",
        "W = np.array ([[1,-3],[2,-2],[3,1]])\n",
        "\n",
        "print(\"Vector Y is\",Y)\n",
        "print()\n",
        "print(\"Vector W is\",W)\n",
        "print()\n",
        "print(\"(YW)^2\")\n",
        "print(np.dot(Y,W)^2)"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vector Y is [[ 1  2  0]\n",
            " [ 0 -1  2]]\n",
            "\n",
            "Vector W is [[ 1 -3]\n",
            " [ 2 -2]\n",
            " [ 3  1]]\n",
            "\n",
            "(YW)^2\n",
            "[[ 7 -5]\n",
            " [ 6  6]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1zG4ufnFaYYU"
      },
      "source": [
        "2.b (WY - X)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gGUFjr8DaUOk",
        "outputId": "fa0da297-2aad-4705-8966-b8b37a536e4f"
      },
      "source": [
        "import numpy as np\n",
        "W = np.array ([[1,-3],[2,-2],[3,1]])\n",
        "Y = np.array ([[1,2,0],[0,-1,2]])\n",
        "X = np.array ([[3,2,1],[-1,2,3],[2,-1,1]])\n",
        "\n",
        "print(\"Vector W is\",W)\n",
        "print()\n",
        "print(\"Vector Y is\",Y)\n",
        "print()\n",
        "print(\"Vector X is\",X)\n",
        "print()\n",
        "print(\"WY-X\")\n",
        "dot = np.dot (W,Y)\n",
        "print(dot-X)"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vector W is [[ 1 -3]\n",
            " [ 2 -2]\n",
            " [ 3  1]]\n",
            "\n",
            "Vector Y is [[ 1  2  0]\n",
            " [ 0 -1  2]]\n",
            "\n",
            "Vector X is [[ 3  2  1]\n",
            " [-1  2  3]\n",
            " [ 2 -1  1]]\n",
            "\n",
            "WY-X\n",
            "[[-2  3 -7]\n",
            " [ 3  4 -7]\n",
            " [ 1  6  1]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fgwPE6ocaeb6"
      },
      "source": [
        "2.c(YW - Z^2)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EQ8txxpmacte",
        "outputId": "a1717117-324b-4fbd-bf1b-4054a81b34a6"
      },
      "source": [
        "import numpy as np\n",
        "\n",
        "Y = np.array ([[1,2,0],[0,-1,2]])\n",
        "W = np.array ([[1,-3],[2,-2],[3,1]])\n",
        "Z = np.array ([[0,1],[2,3]])\n",
        "\n",
        "print(\"Vector Y is\",Y)\n",
        "print()\n",
        "print(\"Vector W is\",W)\n",
        "print()\n",
        "print(\"Vector Z is\",Z)\n",
        "print()\n",
        "print(\"(YW - Z^2)\")\n",
        "print(np.dot(Y,W)-Z^2)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vector Y is [[ 1  2  0]\n",
            " [ 0 -1  2]]\n",
            "\n",
            "Vector W is [[ 1 -3]\n",
            " [ 2 -2]\n",
            " [ 3  1]]\n",
            "\n",
            "Vector Z is [[0 1]\n",
            " [2 3]]\n",
            "\n",
            "(YW - Z^2)\n",
            "[[ 7 -6]\n",
            " [ 0  3]]\n"
          ]
        }
      ]
    }
  ]
}